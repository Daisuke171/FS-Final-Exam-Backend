# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  username: String!
  name: String!
  lastname: String!
  birthday: DateTime!
  levelId: Int!
  level: Level!
  nickname: String
  skins: [String!]!
  friends: [String!]!
  gameHistory: [String!]!
  gameFavorites: [String!]!
  notifications: [String!]!
  chats: [String!]!
  experience: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Level {
  id: Int!
  experienceRequired: Int!
  name: String!
  number: Int!
  color: String!
  users: [User!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GameHistory {
  id: ID!
  gameId: ID!
  game: Game
  userId: ID!
  duration: Int!
  state: String!
  score: Int!
  totalDamage: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GameFavorite {
  id: ID!
  gameId: ID!
  game: Game
  userId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Game {
  id: ID!
  name: String!
  description: String
  rules: String
  gameLogo: String
  score: Float!
  duration: String!
  category: String!
  minPlayers: Int!
  maxPlayers: Int!
  history: [GameHistory]!
  favorite: [GameFavorite]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LeaderboardEntry {
  rank: Int!
  userId: ID!
  nickname: String!
  name: String
  totalScore: Int!
  bestScore: Int!
  totalGames: Int!
  wins: Int!
}

type Leaderboard {
  gameId: ID!
  gameName: String!
  entries: [LeaderboardEntry!]!
  generatedAt: DateTime!
}

type AuthResponse {
  accessToken: String!
  user: User!
}

type Query {
  games: [Game!]!
  game(id: Int!): Game!
  userGames(userId: Int!, gameId: Int!): [GameHistory!]!
  leaderboard(gameId: Int!): Leaderboard!
  globalLeaderboard: Leaderboard!
  userFavorites(userId: Int!): [GameFavorite!]!
  levels: [Level!]!
  level(id: Int!): Level!
  users: [User!]!
}

type Mutation {
  toggleFavorite(input: ToggleFavoriteInput!): Boolean!
  saveGameResult(input: SaveGameResultInput!): GameHistory!
  createGame(input: CreateGameInput!): Game!
  deleteGame(id: Int!): Game!
  updateGame(id: Int!, input: UpdateGameInput!): Game!
  createLevel(data: CreateLevelInput!): Level!
  deleteLevel(id: Int!): Level!
  createUser(data: CreateUserInput!): User!
  deleteUser(id: ID!): User!
  register(registerInput: RegisterInput!): User!
  login(loginInput: LoginInput!): AuthResponse!
}

input ToggleFavoriteInput {
  userId: ID!
  gameId: ID!
}

input SaveGameResultInput {
  userId: ID!
  gameId: ID!
  duration: Int!
  state: String!
  score: Int!
  totalDamage: Int!
}

input CreateGameInput {
  name: String!
  description: String!
  rules: String!
  gameLogo: String!
  category: String!
  score: Int!
  duration: String!
  maxPlayers: Int!
  minPlayers: Int!
}

input UpdateGameInput {
  name: String
  description: String
  rules: String
  gameLogo: String
  category: String
  score: Int
  duration: String
  maxPlayers: Int
  minPlayers: Int
}

input CreateLevelInput {
  number: Int!
  name: String!
  color: String!
  experienceRequired: Int!
}

input CreateUserInput {
  name: String!
  lastname: String!
  username: String!
  email: String!
  nickname: String
  password: String!
  birthday: String!
  levelId: Int!
}

input RegisterInput {
  email: String!
  username: String!
  password: String!
  name: String!
  lastname: String!
  birthday: String!
}

input LoginInput {
  email: String!
  password: String!
}